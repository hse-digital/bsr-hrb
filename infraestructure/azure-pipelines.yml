trigger:
  - main


resources:
  repositories:
  - repository: "HSE Testing"
    type: git
    name: "BSR-AlphaBetaImplementation/HSE Testing"

pool:
  vmImage: ubuntu-latest

stages:
- stage: UnitTest
  jobs:
  - job: 
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Run Unit Tests'
        inputs:
          command: 'test'
          projects: '**/HSEPortal.API.UnitTests.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'Build API'
        inputs:
          command: 'build'
          projects: 'HSEPortal.API/HSEPortal.API.csproj'
          arguments: '--output publish_output --configuration Release'
      - task: ArchiveFiles@2
        displayName: 'Archive API files'
        inputs:
          rootFolderOrFile: 'publish_output/'
          includeRootFolder: false 
          archiveFile: '$(Build.ArtifactStagingDirectory)/HSEPortalAPI.zip'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish API artifact'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/HSEPortalAPI.zip'
          ArtifactName: HSEPortalAPI

- stage: DEV
  dependsOn: UnitTest
  variables: 
  - group: HSEPortal-DEV
  jobs:
    - template: deploy.yml
      parameters:
        subscription: 's118-dev-bsr-acs-services'
        appBuildCommand: 'npm run buildnonprod'
    - job: IntegrationTesting
      dependsOn: Deploy
      steps:
      - task: FileTransform@1
        displayName: 'Set variables for integration testing'
        inputs:
          folderPath: '**/HSEPortal.API.IntegrationTests'
          fileType: 'json'
          targetFiles: 'appsettings.json'
      - task: DotNetCoreCLI@2
        displayName: 'Run Integration Tests'
        inputs:
          command: 'test'
          projects: '**/HSEPortal.API.IntegrationTests.csproj'
    - job: Selenium Tests
      dependsOn: IntegrationTesting
      steps:
      - checkout: "HSE Testing"
      - task: UsePythonVersion@0
        displayName: 'Use Python $(python.version)'
        inputs:
          versionSpec: '$(python.version)'
      - script: pip install robotframework robotframework-seleniumlibrary robotframework-imaplibrary2 && npm install chromedriver
        displayName: 'Install dependencies'

      - powershell: robot --pythonpath . -x outputxunit.xml -v link:$(Swa.Url) tests
        displayName: 'Run tests'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        displayName: 'Publish Test Results'
        inputs:
          testResultsFiles: outputxunit.xml

      - task: PublishBuildArtifacts@1
        condition: succeededOrFailed()
        displayName: 'Publish test report'
        inputs:
          PathtoPublish: 'report.html'
          ArtifactName: 'report'
          publishLocation: 'Container'

- stage: QA
  dependsOn: DEV
  variables: 
  - group: HSEPortal-QA
  jobs:
    - template: deploy.yml
      parameters:
        subscription: 's118-test-bsr-acs-services'
        appBuildCommand: 'npm run buildnonprod'
        
- stage: UAT
  dependsOn: QA
  variables: 
  - group: HSEPortal-UAT
  jobs:
    - template: deploy.yml
      parameters:
        subscription: 's118-test-bsr-acs-services'
        appBuildCommand: 'npm run buildnonprod'
